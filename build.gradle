apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.matthewprenger.cursegradle'

apply from: 'gradle/scripts/dependencies.gradle'
apply from: 'gradle/scripts/integration.gradle'
apply from: 'gradle/scripts/artifacts.gradle'
apply from: 'gradle/scripts/optional.gradle'
apply from: 'gradle/scripts/setup.gradle'

// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.0.7"
    }
}

configurations.all {
    resolutionStrategy.cacheDynamicVersionsFor 7200, 'hours'
}

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

ext {
    curseProjedtId = "0"
    curseApiKey = ""
    curseReleaseType = "alpha"
}

version = minecraft_version + "-" + majorVersion + "." + minorVersion + "." + patchVersion
archivesBaseName = cibasename
group = "com.algorithmicsanonymous.forgewhitelist"

// If TeamCity is running this build, lets set the version info
if (hasProperty("teamcity")) {
    buildVersion = teamcity["build.number"]
    curseProjedtId = teamcity["curseProjectId"]
    curseApiKey = teamcity["curseApiKey"]
    curseReleaseType = teamcity["curseReleaseType"]

    version = minecraft_version + "-" + majorVersion + "." + minorVersion + "." + patchVersion + "." + cibuild

    // Fix for main branch being built
    version = version.replaceAll("/", "-")
}

minecraft {
    version = minecraft_version + "-" + forge_version

    replaceIn "ModInfo.java"

    replace "@VERSION@", project.version
    replace "@MCVERSION@", minecraft_version

    runDir = "run"
    mappings = "snapshot_20160703"

    useDepAts = true
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

curseforge {
    apiKey = curseApiKey
    project {
        releaseType = curseReleaseType
        id = curseProjedtId
        //changelog = file('changelog.html')
        //changelogType = 'html'
        addGameVersion minecraft_version
    }
}
